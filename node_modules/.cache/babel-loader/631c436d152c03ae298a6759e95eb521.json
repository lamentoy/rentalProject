{"ast":null,"code":"import \"core-js/modules/es.function.name.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: \"firstPage\",\n  mounted: function mounted() {\n    var _this = this;\n\n    var LocationSearch = new window.google.maps.places.Autocomplete(document.getElementById(\"autocomplete\"), {\n      bounds: window.google.maps.LatLngBounds(new window.google.maps.LatLng(-25.274398, 133.775136))\n    });\n    LocationSearch.setComponentRestrictions({\n      country: [\"au\"]\n    });\n    LocationSearch.addListener(\"place_changed\", function () {\n      var googleLocation = LocationSearch.getPlace();\n      console.log(googleLocation);\n      _this.googleLocation = {\n        'fullAddress': googleLocation.formatted_address,\n        'shortName': googleLocation.name,\n        \"viewport\": googleLocation.geometry.viewport,\n        \"id\": googleLocation.place_id\n      };\n    });\n    var LocationSearch2 = new window.google.maps.places.Autocomplete(document.getElementById(\"autocomplete2\"), {\n      bounds: window.google.maps.LatLngBounds(new window.google.maps.LatLng(-25.274398, 133.775136))\n    });\n    LocationSearch2.setComponentRestrictions({\n      country: [\"au\"]\n    });\n    LocationSearch2.addListener(\"place_changed\", function () {\n      var googleLocation2 = LocationSearch2.getPlace();\n      console.log(googleLocation2);\n      _this.googleLocation2 = {\n        'fullAddress': googleLocation2.formatted_address,\n        'shortName': googleLocation2.name,\n        \"viewport\": googleLocation2.geometry.viewport,\n        \"id\": googleLocation2.place_id\n      };\n    });\n  },\n  data: function data() {\n    return {\n      locationName: \"\",\n      locationName1: \"\",\n      locationType: \"\",\n      searchLocations: [],\n      searchLocations2: [],\n      LocationTypes: [],\n      googleLocation: \"\",\n      googleLocation2: \"\"\n    };\n  },\n  methods: {\n    addLocations: function addLocations() {\n      if (this.locationName) {\n        this.searchLocations.push(this.googleLocation);\n        this.locationName = \"\";\n      } else {\n        this.$message.error('Please add an valid address!');\n      }\n    },\n    addLocations2: function addLocations2() {\n      if (this.locationName1) {\n        this.searchLocations2.push(this.googleLocation2);\n        this.locationName1 = \"\";\n      } else {\n        this.$message.error('Please add an valid address!');\n      }\n    },\n    addLocationTypes: function addLocationTypes() {\n      if (this.locationType) {\n        this.LocationTypes.push(this.locationType);\n        this.locationType = \"\";\n      } else {\n        this.$message.error('Please add an valid facility type!');\n      }\n    },\n    SearchLocations: function SearchLocations() {\n      if (this.searchLocations.length >= 2) {\n        this.$message.success('Sucess!');\n        console.log(this.searchLocations);\n        console.log(this.searchLocations2);\n        console.log(this.LocationTypes);\n        var params = {\n          searchLocations: this.searchLocations,\n          searchLocations2: this.searchLocations2,\n          LocationTypes: this.LocationTypes\n        };\n        console.log(params);\n        this.$router.push({\n          name: 'secondPage',\n          params: params\n        });\n      } else {\n        this.$message.error('Please enter at least two locations to be compared with!');\n      }\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAwBA;EACAA,iBADA;EAEAC,OAFA,qBAEA;IAAA;;IAEA,gEACAC,uCADA,EAEA;MACAC,wCACA,qDADA;IADA,CAFA;IAQAC;MACAC;IADA;IAIAD;MACA;MACAE;MACA;QAAA;QAAA;QAAA;QAAA;MAAA;IACA,CAJA;IAMA,iEACAJ,wCADA,EAEA;MACAC,wCACA,qDADA;IADA,CAFA;IAQAI;MACAF;IADA;IAIAE;MACA;MACAD;MACA;QAAA;QAAA;QAAA;QAAA;MAAA;IACA,CAJA;EAQA,CA1CA;EA2CAE,IA3CA,kBA2CA;IACA;MACAC,gBADA;MAEAC,iBAFA;MAGAC,gBAHA;MAIAC,mBAJA;MAKAC,oBALA;MAMAC,iBANA;MAOAC,kBAPA;MAQAC;IARA;EAUA,CAtDA;EAuDAC;IACAC,YADA,0BACA;MACA;QACA;QACA;MACA,CAHA,MAGA;QACA;MACA;IAGA,CAVA;IAWAC,aAXA,2BAWA;MACA;QACA;QACA;MACA,CAHA,MAGA;QACA;MACA;IAGA,CApBA;IAqBAC,gBArBA,8BAqBA;MACA;QACA;QACA;MACA,CAHA,MAGA;QACA;MACA;IACA,CA5BA;IA6BAC,eA7BA,6BA6BA;MACA;QACA;QACAf;QACAA;QACAA;QACA;UACAM,qCADA;UAEAC,uCAFA;UAGAC;QAHA;QAKAR;QACA;UACAN,kBADA;UAEAsB;QAFA;MAMA,CAjBA,MAiBA;QACA;MACA;IAEA;EAnDA;AAvDA","names":["name","mounted","document","bounds","LocationSearch","country","console","LocationSearch2","data","locationName","locationName1","locationType","searchLocations","searchLocations2","LocationTypes","googleLocation","googleLocation2","methods","addLocations","addLocations2","addLocationTypes","SearchLocations","params"],"sourceRoot":"src/views/compare","sources":["step1.vue"],"sourcesContent":["<template>\n  <div class=\"firstStep\">\n       \n    <div class=\"SearchBox\">\n      <el-input id=\"autocomplete\"  type=\"text\" v-model=\"locationName\" placeholder=\"Please enter a location to add\" prefix-icon=\"el-icon-search\"/>\n       <el-button @click=\"addLocations\" class=\"clickable\" >Add</el-button>\n      <el-button @click=\"locationName=''\" class=\"clickable\" >Clear</el-button>  \n      </div>  \n     <div class=\"operations\"><div class=\"opTitle\" >Location List:</div>\n      <el-button @click=\"searchLocations=[]\" >x Remove All </el-button></div>\n      <div v-for=\"(location) in searchLocations\"  :key=\"location.fullAddress\"><el-tag>{{location.shortName}}\n        <el-popover\n        placement=\"bottom-end\"\n        title=\"Full Address\"\n        trigger=\"click\"\n        :content=\"location.fullAddress\">\n        <i class=\"el-icon-info\" slot=\"reference\"/>\n\n    </el-popover>\n    </el-tag></div>\n   </div>\n</template>\n\n<script>\nexport default {\n    name:\"firstPage\",\n    mounted(){\n   \n    const LocationSearch=new window.google.maps.places.Autocomplete(\n      document.getElementById(\"autocomplete\"),\n      {\n        bounds: window.google.maps.LatLngBounds(\n          new window.google.maps.LatLng(-25.274398, 133.775136)\n        )\n      }\n    )\n     LocationSearch.setComponentRestrictions({\n    country: [\"au\"],\n    });\n\n    LocationSearch.addListener(\"place_changed\", ()=>{\n      let googleLocation=LocationSearch.getPlace()\n      console.log(googleLocation)\n      this.googleLocation={'fullAddress':googleLocation.formatted_address,'shortName':googleLocation.name,\"viewport\":googleLocation.geometry.viewport,\"id\":googleLocation.place_id}\n    })\n\n const LocationSearch2=new window.google.maps.places.Autocomplete(\n      document.getElementById(\"autocomplete2\"),\n      {\n        bounds: window.google.maps.LatLngBounds(\n          new window.google.maps.LatLng(-25.274398, 133.775136)\n        )\n      }\n    )\n    LocationSearch2.setComponentRestrictions({\n    country: [\"au\"],\n    });\n\n    LocationSearch2.addListener(\"place_changed\", ()=>{\n      let googleLocation2=LocationSearch2.getPlace()\n      console.log(googleLocation2)\n      this.googleLocation2={'fullAddress':googleLocation2.formatted_address,'shortName':googleLocation2.name,\"viewport\":googleLocation2.geometry.viewport,\"id\":googleLocation2.place_id}\n    })\n\n\n\n  },\n  data(){\n    return{\n      locationName:\"\",\n      locationName1:\"\",\n      locationType:\"\",\n      searchLocations:[],\n      searchLocations2:[],\n      LocationTypes:[],\n      googleLocation:\"\",\n      googleLocation2:\"\"\n    }\n  },\n  methods:{\n    addLocations(){\n      if (this.locationName){\n      this.searchLocations.push(this.googleLocation)\n      this.locationName=\"\"\n      }else{\n          this.$message.error('Please add an valid address!')\n      }\n\n\n    },\n    addLocations2(){\n     if (this.locationName1){\n      this.searchLocations2.push(this.googleLocation2)\n      this.locationName1=\"\"\n      }else{\n          this.$message.error('Please add an valid address!')\n      }\n\n\n    },\n    addLocationTypes(){\n      if (this.locationType){\n      this.LocationTypes.push(this.locationType)\n      this.locationType=\"\"\n      }else{\n          this.$message.error('Please add an valid facility type!')\n      }\n    },\n    SearchLocations(){\n        if(this.searchLocations.length>=2){\n            this.$message.success('Sucess!')\n            console.log(this.searchLocations)\n            console.log(this.searchLocations2)\n            console.log(this.LocationTypes)\n            const params={\n                    searchLocations:this.searchLocations,\n                    searchLocations2:this.searchLocations2,\n                    LocationTypes:this.LocationTypes\n                }\n            console.log(params)\n            this.$router.push({\n                name:'secondPage',\n                params:params\n            }\n            )\n\n        }else{\n            this.$message.error('Please enter at least two locations to be compared with!')\n        }\n\n    }\n  }\n\n}\n</script>\n\n<style lang=\"less\" scoped>\n .firstStep {\n\n     z-index:1;\n    margin:auto;\n    margin-top:40px;\n    height:50%;\n    width:85%;\n    overflow: scroll;\n    .el-icon-info{\n        size:8px;\n        color:orange;\n    }\n    .clickable{\n        cursor: pointer;\n    }\n    .mg-bt-10{\n        margin-bottom: 10px;\n    }\n    .operations{\n        display: flex;\n        justify-content: space-between;\n        border-bottom: 1px solid #a1c4fd;\n        align-items: center;\n         color:rgb(12, 44, 96);\n        .el-button{\n            height: 40px;\n            width:120px;\n            marigin-right:20px;\n            background: #effaff;\n\n        }\n        .opTitle{\n            border-left: 4px  solid #a1c4fd;\n           \n            padding-left:10px;\n            display: flex;\n           align-items: center;\n        }\n    }\n\n    .SearchBox{\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        margin-bottom:10px;\n        .el-input{\n            width:calc(100% - 160px);\n            margin:20px 0;\n        }\n   \n        .el-button{\n            height: 40px;\n             width:80px;\n             margin:0;\n            background: #effaff;\n          \n\n        }\n    }\n\n  \n  }\n</style>"]},"metadata":{},"sourceType":"module"}