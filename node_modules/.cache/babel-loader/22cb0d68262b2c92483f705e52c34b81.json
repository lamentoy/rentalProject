{"ast":null,"code":"import _toConsumableArray from \"/Users/lamentoyy/Desktop/rental_project/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _slicedToArray from \"/Users/lamentoyy/Desktop/rental_project/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.array.find-index.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport { createVNode as _createVNode, mergeProps as _mergeProps } from \"vue\";\nimport { ref, watch, computed, defineComponent } from \"vue\";\nimport { pick, isDate, truthProp, numericProp, getScrollTop, makeStringProp, makeNumericProp } from \"../utils\";\nimport { t, bem, name, getToday, cloneDate, cloneDates, getPrevDay, getNextDay, compareDay, calcDateNum, compareMonth, getDayByOffset } from \"./utils\";\nimport { raf, useRect, onMountedOrActivated } from \"@vant/use\";\nimport { useRefs } from \"../composables/use-refs\";\nimport { useExpose } from \"../composables/use-expose\";\nimport { Popup } from \"../popup\";\nimport { Button } from \"../button\";\nimport { Toast } from \"../toast\";\nimport CalendarMonth from \"./CalendarMonth\";\nimport CalendarHeader from \"./CalendarHeader\";\nvar calendarProps = {\n  show: Boolean,\n  type: makeStringProp(\"single\"),\n  title: String,\n  color: String,\n  round: truthProp,\n  readonly: Boolean,\n  poppable: truthProp,\n  maxRange: makeNumericProp(null),\n  position: makeStringProp(\"bottom\"),\n  teleport: [String, Object],\n  showMark: truthProp,\n  showTitle: truthProp,\n  formatter: Function,\n  rowHeight: numericProp,\n  confirmText: String,\n  rangePrompt: String,\n  lazyRender: truthProp,\n  showConfirm: truthProp,\n  defaultDate: [Date, Array],\n  allowSameDay: Boolean,\n  showSubtitle: truthProp,\n  closeOnPopstate: truthProp,\n  showRangePrompt: truthProp,\n  confirmDisabledText: String,\n  closeOnClickOverlay: truthProp,\n  safeAreaInsetTop: Boolean,\n  safeAreaInsetBottom: truthProp,\n  minDate: {\n    type: Date,\n    validator: isDate,\n    default: getToday\n  },\n  maxDate: {\n    type: Date,\n    validator: isDate,\n    default: function _default() {\n      var now = getToday();\n      return new Date(now.getFullYear(), now.getMonth() + 6, now.getDate());\n    }\n  },\n  firstDayOfWeek: {\n    type: numericProp,\n    default: 0,\n    validator: function validator(val) {\n      return val >= 0 && val <= 6;\n    }\n  }\n};\nvar stdin_default = defineComponent({\n  name: name,\n  props: calendarProps,\n  emits: [\"select\", \"confirm\", \"unselect\", \"month-show\", \"over-range\", \"update:show\", \"click-subtitle\"],\n  setup: function setup(props, _ref) {\n    var emit = _ref.emit,\n        slots = _ref.slots;\n\n    var limitDateRange = function limitDateRange(date) {\n      var minDate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : props.minDate;\n      var maxDate = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : props.maxDate;\n\n      if (compareDay(date, minDate) === -1) {\n        return minDate;\n      }\n\n      if (compareDay(date, maxDate) === 1) {\n        return maxDate;\n      }\n\n      return date;\n    };\n\n    var getInitialDate = function getInitialDate() {\n      var defaultDate = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : props.defaultDate;\n      var type = props.type,\n          minDate = props.minDate,\n          maxDate = props.maxDate;\n\n      if (defaultDate === null) {\n        return defaultDate;\n      }\n\n      var now = getToday();\n\n      if (type === \"range\") {\n        if (!Array.isArray(defaultDate)) {\n          defaultDate = [];\n        }\n\n        var start = limitDateRange(defaultDate[0] || now, minDate, getPrevDay(maxDate));\n        var end = limitDateRange(defaultDate[1] || now, getNextDay(minDate));\n        return [start, end];\n      }\n\n      if (type === \"multiple\") {\n        if (Array.isArray(defaultDate)) {\n          return defaultDate.map(function (date) {\n            return limitDateRange(date);\n          });\n        }\n\n        return [limitDateRange(now)];\n      }\n\n      if (!defaultDate || Array.isArray(defaultDate)) {\n        defaultDate = now;\n      }\n\n      return limitDateRange(defaultDate);\n    };\n\n    var bodyHeight;\n    var bodyRef = ref();\n    var subtitle = ref(\"\");\n    var currentDate = ref(getInitialDate());\n\n    var _useRefs = useRefs(),\n        _useRefs2 = _slicedToArray(_useRefs, 2),\n        monthRefs = _useRefs2[0],\n        setMonthRefs = _useRefs2[1];\n\n    var dayOffset = computed(function () {\n      return props.firstDayOfWeek ? +props.firstDayOfWeek % 7 : 0;\n    });\n    var months = computed(function () {\n      var months2 = [];\n      var cursor = new Date(props.minDate);\n      cursor.setDate(1);\n\n      do {\n        months2.push(new Date(cursor));\n        cursor.setMonth(cursor.getMonth() + 1);\n      } while (compareMonth(cursor, props.maxDate) !== 1);\n\n      return months2;\n    });\n    var buttonDisabled = computed(function () {\n      if (currentDate.value) {\n        if (props.type === \"range\") {\n          return !currentDate.value[0] || !currentDate.value[1];\n        }\n\n        if (props.type === \"multiple\") {\n          return !currentDate.value.length;\n        }\n      }\n\n      return !currentDate.value;\n    });\n\n    var onScroll = function onScroll() {\n      var top = getScrollTop(bodyRef.value);\n      var bottom = top + bodyHeight;\n      var heights = months.value.map(function (item, index) {\n        return monthRefs.value[index].getHeight();\n      });\n      var heightSum = heights.reduce(function (a, b) {\n        return a + b;\n      }, 0);\n\n      if (bottom > heightSum && top > 0) {\n        return;\n      }\n\n      var height = 0;\n      var currentMonth;\n      var visibleRange = [-1, -1];\n\n      for (var i = 0; i < months.value.length; i++) {\n        var month = monthRefs.value[i];\n        var visible = height <= bottom && height + heights[i] >= top;\n\n        if (visible) {\n          visibleRange[1] = i;\n\n          if (!currentMonth) {\n            currentMonth = month;\n            visibleRange[0] = i;\n          }\n\n          if (!monthRefs.value[i].showed) {\n            monthRefs.value[i].showed = true;\n            emit(\"month-show\", {\n              date: month.date,\n              title: month.getTitle()\n            });\n          }\n        }\n\n        height += heights[i];\n      }\n\n      months.value.forEach(function (month, index) {\n        var visible = index >= visibleRange[0] - 1 && index <= visibleRange[1] + 1;\n        monthRefs.value[index].setVisible(visible);\n      });\n\n      if (currentMonth) {\n        subtitle.value = currentMonth.getTitle();\n      }\n    };\n\n    var scrollToDate = function scrollToDate(targetDate) {\n      raf(function () {\n        months.value.some(function (month, index) {\n          if (compareMonth(month, targetDate) === 0) {\n            if (bodyRef.value) {\n              monthRefs.value[index].scrollToDate(bodyRef.value, targetDate);\n            }\n\n            return true;\n          }\n\n          return false;\n        });\n        onScroll();\n      });\n    };\n\n    var scrollToCurrentDate = function scrollToCurrentDate() {\n      if (props.poppable && !props.show) {\n        return;\n      }\n\n      if (currentDate.value) {\n        var targetDate = props.type === \"single\" ? currentDate.value : currentDate.value[0];\n        scrollToDate(targetDate);\n      } else {\n        raf(onScroll);\n      }\n    };\n\n    var init = function init() {\n      if (props.poppable && !props.show) {\n        return;\n      }\n\n      raf(function () {\n        bodyHeight = Math.floor(useRect(bodyRef).height);\n      });\n      scrollToCurrentDate();\n    };\n\n    var reset = function reset() {\n      var date = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getInitialDate();\n      currentDate.value = date;\n      scrollToCurrentDate();\n    };\n\n    var checkRange = function checkRange(date) {\n      var maxRange = props.maxRange,\n          rangePrompt = props.rangePrompt,\n          showRangePrompt = props.showRangePrompt;\n\n      if (maxRange && calcDateNum(date) > maxRange) {\n        if (showRangePrompt) {\n          Toast(rangePrompt || t(\"rangePrompt\", maxRange));\n        }\n\n        emit(\"over-range\");\n        return false;\n      }\n\n      return true;\n    };\n\n    var onConfirm = function onConfirm() {\n      var _a;\n\n      return emit(\"confirm\", (_a = currentDate.value) != null ? _a : cloneDates(currentDate.value));\n    };\n\n    var select = function select(date, complete) {\n      var setCurrentDate = function setCurrentDate(date2) {\n        currentDate.value = date2;\n        emit(\"select\", cloneDates(date2));\n      };\n\n      if (complete && props.type === \"range\") {\n        var valid = checkRange(date);\n\n        if (!valid) {\n          setCurrentDate([date[0], getDayByOffset(date[0], +props.maxRange - 1)]);\n          return;\n        }\n      }\n\n      setCurrentDate(date);\n\n      if (complete && !props.showConfirm) {\n        onConfirm();\n      }\n    };\n\n    var getDisabledDate = function getDisabledDate(disabledDays2, startDay, date) {\n      var _a;\n\n      return (_a = disabledDays2.find(function (day) {\n        return compareDay(startDay, day.date) === -1 && compareDay(day.date, date) === -1;\n      })) == null ? void 0 : _a.date;\n    };\n\n    var disabledDays = computed(function () {\n      return monthRefs.value.reduce(function (arr, ref2) {\n        var _a, _b;\n\n        arr.push.apply(arr, _toConsumableArray((_b = (_a = ref2.disabledDays) == null ? void 0 : _a.value) != null ? _b : []));\n        return arr;\n      }, []);\n    });\n\n    var onClickDay = function onClickDay(item) {\n      if (props.readonly || !item.date) {\n        return;\n      }\n\n      var date = item.date;\n      var type = props.type;\n\n      if (type === \"range\") {\n        if (!currentDate.value) {\n          select([date]);\n          return;\n        }\n\n        var _currentDate$value = _slicedToArray(currentDate.value, 2),\n            startDay = _currentDate$value[0],\n            endDay = _currentDate$value[1];\n\n        if (startDay && !endDay) {\n          var compareToStart = compareDay(date, startDay);\n\n          if (compareToStart === 1) {\n            var disabledDay = getDisabledDate(disabledDays.value, startDay, date);\n\n            if (disabledDay) {\n              var endDay2 = getPrevDay(disabledDay);\n\n              if (compareDay(startDay, endDay2) === -1) {\n                select([startDay, endDay2]);\n              } else {\n                select([date]);\n              }\n            } else {\n              select([startDay, date], true);\n            }\n          } else if (compareToStart === -1) {\n            select([date]);\n          } else if (props.allowSameDay) {\n            select([date, date], true);\n          }\n        } else {\n          select([date]);\n        }\n      } else if (type === \"multiple\") {\n        if (!currentDate.value) {\n          select([date]);\n          return;\n        }\n\n        var dates = currentDate.value;\n        var selectedIndex = dates.findIndex(function (dateItem) {\n          return compareDay(dateItem, date) === 0;\n        });\n\n        if (selectedIndex !== -1) {\n          var _dates$splice = dates.splice(selectedIndex, 1),\n              _dates$splice2 = _slicedToArray(_dates$splice, 1),\n              unselectedDate = _dates$splice2[0];\n\n          emit(\"unselect\", cloneDate(unselectedDate));\n        } else if (props.maxRange && dates.length >= props.maxRange) {\n          Toast(props.rangePrompt || t(\"rangePrompt\", props.maxRange));\n        } else {\n          select([].concat(_toConsumableArray(dates), [date]));\n        }\n      } else {\n        select(date, true);\n      }\n    };\n\n    var updateShow = function updateShow(value) {\n      return emit(\"update:show\", value);\n    };\n\n    var renderMonth = function renderMonth(date, index) {\n      var showMonthTitle = index !== 0 || !props.showSubtitle;\n      return _createVNode(CalendarMonth, _mergeProps({\n        \"ref\": setMonthRefs(index),\n        \"date\": date,\n        \"currentDate\": currentDate.value,\n        \"showMonthTitle\": showMonthTitle,\n        \"firstDayOfWeek\": dayOffset.value\n      }, pick(props, [\"type\", \"color\", \"minDate\", \"maxDate\", \"showMark\", \"formatter\", \"rowHeight\", \"lazyRender\", \"showSubtitle\", \"allowSameDay\"]), {\n        \"onClick\": onClickDay\n      }), pick(slots, [\"top-info\", \"bottom-info\"]));\n    };\n\n    var renderFooterButton = function renderFooterButton() {\n      if (slots.footer) {\n        return slots.footer();\n      }\n\n      if (props.showConfirm) {\n        var slot = slots[\"confirm-text\"];\n        var disabled = buttonDisabled.value;\n        var text = disabled ? props.confirmDisabledText : props.confirmText;\n        return _createVNode(Button, {\n          \"round\": true,\n          \"block\": true,\n          \"type\": \"danger\",\n          \"color\": props.color,\n          \"class\": bem(\"confirm\"),\n          \"disabled\": disabled,\n          \"nativeType\": \"button\",\n          \"onClick\": onConfirm\n        }, {\n          default: function _default() {\n            return [slot ? slot({\n              disabled: disabled\n            }) : text || t(\"confirm\")];\n          }\n        });\n      }\n    };\n\n    var renderFooter = function renderFooter() {\n      return _createVNode(\"div\", {\n        \"class\": [bem(\"footer\"), {\n          \"van-safe-area-bottom\": props.safeAreaInsetBottom\n        }]\n      }, [renderFooterButton()]);\n    };\n\n    var renderCalendar = function renderCalendar() {\n      return _createVNode(\"div\", {\n        \"class\": bem()\n      }, [_createVNode(CalendarHeader, {\n        \"title\": props.title,\n        \"subtitle\": subtitle.value,\n        \"showTitle\": props.showTitle,\n        \"showSubtitle\": props.showSubtitle,\n        \"firstDayOfWeek\": dayOffset.value,\n        \"onClick-subtitle\": function onClickSubtitle(event) {\n          return emit(\"click-subtitle\", event);\n        }\n      }, pick(slots, [\"title\", \"subtitle\"])), _createVNode(\"div\", {\n        \"ref\": bodyRef,\n        \"class\": bem(\"body\"),\n        \"onScroll\": onScroll\n      }, [months.value.map(renderMonth)]), renderFooter()]);\n    };\n\n    watch(function () {\n      return props.show;\n    }, init);\n    watch(function () {\n      return [props.type, props.minDate, props.maxDate];\n    }, function () {\n      return reset(getInitialDate(currentDate.value));\n    });\n    watch(function () {\n      return props.defaultDate;\n    }, function () {\n      var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      currentDate.value = value;\n      scrollToCurrentDate();\n    });\n    useExpose({\n      reset: reset,\n      scrollToDate: scrollToDate\n    });\n    onMountedOrActivated(init);\n    return function () {\n      if (props.poppable) {\n        return _createVNode(Popup, {\n          \"show\": props.show,\n          \"class\": bem(\"popup\"),\n          \"round\": props.round,\n          \"position\": props.position,\n          \"closeable\": props.showTitle || props.showSubtitle,\n          \"teleport\": props.teleport,\n          \"closeOnPopstate\": props.closeOnPopstate,\n          \"safeAreaInsetTop\": props.safeAreaInsetTop,\n          \"closeOnClickOverlay\": props.closeOnClickOverlay,\n          \"onUpdate:show\": updateShow\n        }, {\n          default: renderCalendar\n        });\n      }\n\n      return renderCalendar();\n    };\n  }\n});\nexport { stdin_default as default };","map":{"version":3,"names":["createVNode","_createVNode","mergeProps","_mergeProps","ref","watch","computed","defineComponent","pick","isDate","truthProp","numericProp","getScrollTop","makeStringProp","makeNumericProp","t","bem","name","getToday","cloneDate","cloneDates","getPrevDay","getNextDay","compareDay","calcDateNum","compareMonth","getDayByOffset","raf","useRect","onMountedOrActivated","useRefs","useExpose","Popup","Button","Toast","CalendarMonth","CalendarHeader","calendarProps","show","Boolean","type","title","String","color","round","readonly","poppable","maxRange","position","teleport","Object","showMark","showTitle","formatter","Function","rowHeight","confirmText","rangePrompt","lazyRender","showConfirm","defaultDate","Date","Array","allowSameDay","showSubtitle","closeOnPopstate","showRangePrompt","confirmDisabledText","closeOnClickOverlay","safeAreaInsetTop","safeAreaInsetBottom","minDate","validator","default","maxDate","now","getFullYear","getMonth","getDate","firstDayOfWeek","val","stdin_default","props","emits","setup","emit","slots","limitDateRange","date","getInitialDate","isArray","start","end","map","bodyHeight","bodyRef","subtitle","currentDate","monthRefs","setMonthRefs","dayOffset","months","months2","cursor","setDate","push","setMonth","buttonDisabled","value","length","onScroll","top","bottom","heights","item","index","getHeight","heightSum","reduce","a","b","height","currentMonth","visibleRange","i","month","visible","showed","getTitle","forEach","setVisible","scrollToDate","targetDate","some","scrollToCurrentDate","init","Math","floor","reset","checkRange","onConfirm","_a","select","complete","setCurrentDate","date2","valid","getDisabledDate","disabledDays2","startDay","find","day","disabledDays","arr","ref2","_b","onClickDay","endDay","compareToStart","disabledDay","endDay2","dates","selectedIndex","findIndex","dateItem","splice","unselectedDate","updateShow","renderMonth","showMonthTitle","renderFooterButton","footer","slot","disabled","text","renderFooter","renderCalendar","event"],"sources":["/Users/lamentoyy/Desktop/rental_project/node_modules/vant/es/calendar/Calendar.js"],"sourcesContent":["import { createVNode as _createVNode, mergeProps as _mergeProps } from \"vue\";\nimport { ref, watch, computed, defineComponent } from \"vue\";\nimport { pick, isDate, truthProp, numericProp, getScrollTop, makeStringProp, makeNumericProp } from \"../utils\";\nimport { t, bem, name, getToday, cloneDate, cloneDates, getPrevDay, getNextDay, compareDay, calcDateNum, compareMonth, getDayByOffset } from \"./utils\";\nimport { raf, useRect, onMountedOrActivated } from \"@vant/use\";\nimport { useRefs } from \"../composables/use-refs\";\nimport { useExpose } from \"../composables/use-expose\";\nimport { Popup } from \"../popup\";\nimport { Button } from \"../button\";\nimport { Toast } from \"../toast\";\nimport CalendarMonth from \"./CalendarMonth\";\nimport CalendarHeader from \"./CalendarHeader\";\nconst calendarProps = {\n  show: Boolean,\n  type: makeStringProp(\"single\"),\n  title: String,\n  color: String,\n  round: truthProp,\n  readonly: Boolean,\n  poppable: truthProp,\n  maxRange: makeNumericProp(null),\n  position: makeStringProp(\"bottom\"),\n  teleport: [String, Object],\n  showMark: truthProp,\n  showTitle: truthProp,\n  formatter: Function,\n  rowHeight: numericProp,\n  confirmText: String,\n  rangePrompt: String,\n  lazyRender: truthProp,\n  showConfirm: truthProp,\n  defaultDate: [Date, Array],\n  allowSameDay: Boolean,\n  showSubtitle: truthProp,\n  closeOnPopstate: truthProp,\n  showRangePrompt: truthProp,\n  confirmDisabledText: String,\n  closeOnClickOverlay: truthProp,\n  safeAreaInsetTop: Boolean,\n  safeAreaInsetBottom: truthProp,\n  minDate: {\n    type: Date,\n    validator: isDate,\n    default: getToday\n  },\n  maxDate: {\n    type: Date,\n    validator: isDate,\n    default: () => {\n      const now = getToday();\n      return new Date(now.getFullYear(), now.getMonth() + 6, now.getDate());\n    }\n  },\n  firstDayOfWeek: {\n    type: numericProp,\n    default: 0,\n    validator: (val) => val >= 0 && val <= 6\n  }\n};\nvar stdin_default = defineComponent({\n  name,\n  props: calendarProps,\n  emits: [\"select\", \"confirm\", \"unselect\", \"month-show\", \"over-range\", \"update:show\", \"click-subtitle\"],\n  setup(props, {\n    emit,\n    slots\n  }) {\n    const limitDateRange = (date, minDate = props.minDate, maxDate = props.maxDate) => {\n      if (compareDay(date, minDate) === -1) {\n        return minDate;\n      }\n      if (compareDay(date, maxDate) === 1) {\n        return maxDate;\n      }\n      return date;\n    };\n    const getInitialDate = (defaultDate = props.defaultDate) => {\n      const {\n        type,\n        minDate,\n        maxDate\n      } = props;\n      if (defaultDate === null) {\n        return defaultDate;\n      }\n      const now = getToday();\n      if (type === \"range\") {\n        if (!Array.isArray(defaultDate)) {\n          defaultDate = [];\n        }\n        const start = limitDateRange(defaultDate[0] || now, minDate, getPrevDay(maxDate));\n        const end = limitDateRange(defaultDate[1] || now, getNextDay(minDate));\n        return [start, end];\n      }\n      if (type === \"multiple\") {\n        if (Array.isArray(defaultDate)) {\n          return defaultDate.map((date) => limitDateRange(date));\n        }\n        return [limitDateRange(now)];\n      }\n      if (!defaultDate || Array.isArray(defaultDate)) {\n        defaultDate = now;\n      }\n      return limitDateRange(defaultDate);\n    };\n    let bodyHeight;\n    const bodyRef = ref();\n    const subtitle = ref(\"\");\n    const currentDate = ref(getInitialDate());\n    const [monthRefs, setMonthRefs] = useRefs();\n    const dayOffset = computed(() => props.firstDayOfWeek ? +props.firstDayOfWeek % 7 : 0);\n    const months = computed(() => {\n      const months2 = [];\n      const cursor = new Date(props.minDate);\n      cursor.setDate(1);\n      do {\n        months2.push(new Date(cursor));\n        cursor.setMonth(cursor.getMonth() + 1);\n      } while (compareMonth(cursor, props.maxDate) !== 1);\n      return months2;\n    });\n    const buttonDisabled = computed(() => {\n      if (currentDate.value) {\n        if (props.type === \"range\") {\n          return !currentDate.value[0] || !currentDate.value[1];\n        }\n        if (props.type === \"multiple\") {\n          return !currentDate.value.length;\n        }\n      }\n      return !currentDate.value;\n    });\n    const onScroll = () => {\n      const top = getScrollTop(bodyRef.value);\n      const bottom = top + bodyHeight;\n      const heights = months.value.map((item, index) => monthRefs.value[index].getHeight());\n      const heightSum = heights.reduce((a, b) => a + b, 0);\n      if (bottom > heightSum && top > 0) {\n        return;\n      }\n      let height = 0;\n      let currentMonth;\n      const visibleRange = [-1, -1];\n      for (let i = 0; i < months.value.length; i++) {\n        const month = monthRefs.value[i];\n        const visible = height <= bottom && height + heights[i] >= top;\n        if (visible) {\n          visibleRange[1] = i;\n          if (!currentMonth) {\n            currentMonth = month;\n            visibleRange[0] = i;\n          }\n          if (!monthRefs.value[i].showed) {\n            monthRefs.value[i].showed = true;\n            emit(\"month-show\", {\n              date: month.date,\n              title: month.getTitle()\n            });\n          }\n        }\n        height += heights[i];\n      }\n      months.value.forEach((month, index) => {\n        const visible = index >= visibleRange[0] - 1 && index <= visibleRange[1] + 1;\n        monthRefs.value[index].setVisible(visible);\n      });\n      if (currentMonth) {\n        subtitle.value = currentMonth.getTitle();\n      }\n    };\n    const scrollToDate = (targetDate) => {\n      raf(() => {\n        months.value.some((month, index) => {\n          if (compareMonth(month, targetDate) === 0) {\n            if (bodyRef.value) {\n              monthRefs.value[index].scrollToDate(bodyRef.value, targetDate);\n            }\n            return true;\n          }\n          return false;\n        });\n        onScroll();\n      });\n    };\n    const scrollToCurrentDate = () => {\n      if (props.poppable && !props.show) {\n        return;\n      }\n      if (currentDate.value) {\n        const targetDate = props.type === \"single\" ? currentDate.value : currentDate.value[0];\n        scrollToDate(targetDate);\n      } else {\n        raf(onScroll);\n      }\n    };\n    const init = () => {\n      if (props.poppable && !props.show) {\n        return;\n      }\n      raf(() => {\n        bodyHeight = Math.floor(useRect(bodyRef).height);\n      });\n      scrollToCurrentDate();\n    };\n    const reset = (date = getInitialDate()) => {\n      currentDate.value = date;\n      scrollToCurrentDate();\n    };\n    const checkRange = (date) => {\n      const {\n        maxRange,\n        rangePrompt,\n        showRangePrompt\n      } = props;\n      if (maxRange && calcDateNum(date) > maxRange) {\n        if (showRangePrompt) {\n          Toast(rangePrompt || t(\"rangePrompt\", maxRange));\n        }\n        emit(\"over-range\");\n        return false;\n      }\n      return true;\n    };\n    const onConfirm = () => {\n      var _a;\n      return emit(\"confirm\", (_a = currentDate.value) != null ? _a : cloneDates(currentDate.value));\n    };\n    const select = (date, complete) => {\n      const setCurrentDate = (date2) => {\n        currentDate.value = date2;\n        emit(\"select\", cloneDates(date2));\n      };\n      if (complete && props.type === \"range\") {\n        const valid = checkRange(date);\n        if (!valid) {\n          setCurrentDate([date[0], getDayByOffset(date[0], +props.maxRange - 1)]);\n          return;\n        }\n      }\n      setCurrentDate(date);\n      if (complete && !props.showConfirm) {\n        onConfirm();\n      }\n    };\n    const getDisabledDate = (disabledDays2, startDay, date) => {\n      var _a;\n      return (_a = disabledDays2.find((day) => compareDay(startDay, day.date) === -1 && compareDay(day.date, date) === -1)) == null ? void 0 : _a.date;\n    };\n    const disabledDays = computed(() => monthRefs.value.reduce((arr, ref2) => {\n      var _a, _b;\n      arr.push(...(_b = (_a = ref2.disabledDays) == null ? void 0 : _a.value) != null ? _b : []);\n      return arr;\n    }, []));\n    const onClickDay = (item) => {\n      if (props.readonly || !item.date) {\n        return;\n      }\n      const {\n        date\n      } = item;\n      const {\n        type\n      } = props;\n      if (type === \"range\") {\n        if (!currentDate.value) {\n          select([date]);\n          return;\n        }\n        const [startDay, endDay] = currentDate.value;\n        if (startDay && !endDay) {\n          const compareToStart = compareDay(date, startDay);\n          if (compareToStart === 1) {\n            const disabledDay = getDisabledDate(disabledDays.value, startDay, date);\n            if (disabledDay) {\n              const endDay2 = getPrevDay(disabledDay);\n              if (compareDay(startDay, endDay2) === -1) {\n                select([startDay, endDay2]);\n              } else {\n                select([date]);\n              }\n            } else {\n              select([startDay, date], true);\n            }\n          } else if (compareToStart === -1) {\n            select([date]);\n          } else if (props.allowSameDay) {\n            select([date, date], true);\n          }\n        } else {\n          select([date]);\n        }\n      } else if (type === \"multiple\") {\n        if (!currentDate.value) {\n          select([date]);\n          return;\n        }\n        const dates = currentDate.value;\n        const selectedIndex = dates.findIndex((dateItem) => compareDay(dateItem, date) === 0);\n        if (selectedIndex !== -1) {\n          const [unselectedDate] = dates.splice(selectedIndex, 1);\n          emit(\"unselect\", cloneDate(unselectedDate));\n        } else if (props.maxRange && dates.length >= props.maxRange) {\n          Toast(props.rangePrompt || t(\"rangePrompt\", props.maxRange));\n        } else {\n          select([...dates, date]);\n        }\n      } else {\n        select(date, true);\n      }\n    };\n    const updateShow = (value) => emit(\"update:show\", value);\n    const renderMonth = (date, index) => {\n      const showMonthTitle = index !== 0 || !props.showSubtitle;\n      return _createVNode(CalendarMonth, _mergeProps({\n        \"ref\": setMonthRefs(index),\n        \"date\": date,\n        \"currentDate\": currentDate.value,\n        \"showMonthTitle\": showMonthTitle,\n        \"firstDayOfWeek\": dayOffset.value\n      }, pick(props, [\"type\", \"color\", \"minDate\", \"maxDate\", \"showMark\", \"formatter\", \"rowHeight\", \"lazyRender\", \"showSubtitle\", \"allowSameDay\"]), {\n        \"onClick\": onClickDay\n      }), pick(slots, [\"top-info\", \"bottom-info\"]));\n    };\n    const renderFooterButton = () => {\n      if (slots.footer) {\n        return slots.footer();\n      }\n      if (props.showConfirm) {\n        const slot = slots[\"confirm-text\"];\n        const disabled = buttonDisabled.value;\n        const text = disabled ? props.confirmDisabledText : props.confirmText;\n        return _createVNode(Button, {\n          \"round\": true,\n          \"block\": true,\n          \"type\": \"danger\",\n          \"color\": props.color,\n          \"class\": bem(\"confirm\"),\n          \"disabled\": disabled,\n          \"nativeType\": \"button\",\n          \"onClick\": onConfirm\n        }, {\n          default: () => [slot ? slot({\n            disabled\n          }) : text || t(\"confirm\")]\n        });\n      }\n    };\n    const renderFooter = () => _createVNode(\"div\", {\n      \"class\": [bem(\"footer\"), {\n        \"van-safe-area-bottom\": props.safeAreaInsetBottom\n      }]\n    }, [renderFooterButton()]);\n    const renderCalendar = () => _createVNode(\"div\", {\n      \"class\": bem()\n    }, [_createVNode(CalendarHeader, {\n      \"title\": props.title,\n      \"subtitle\": subtitle.value,\n      \"showTitle\": props.showTitle,\n      \"showSubtitle\": props.showSubtitle,\n      \"firstDayOfWeek\": dayOffset.value,\n      \"onClick-subtitle\": (event) => emit(\"click-subtitle\", event)\n    }, pick(slots, [\"title\", \"subtitle\"])), _createVNode(\"div\", {\n      \"ref\": bodyRef,\n      \"class\": bem(\"body\"),\n      \"onScroll\": onScroll\n    }, [months.value.map(renderMonth)]), renderFooter()]);\n    watch(() => props.show, init);\n    watch(() => [props.type, props.minDate, props.maxDate], () => reset(getInitialDate(currentDate.value)));\n    watch(() => props.defaultDate, (value = null) => {\n      currentDate.value = value;\n      scrollToCurrentDate();\n    });\n    useExpose({\n      reset,\n      scrollToDate\n    });\n    onMountedOrActivated(init);\n    return () => {\n      if (props.poppable) {\n        return _createVNode(Popup, {\n          \"show\": props.show,\n          \"class\": bem(\"popup\"),\n          \"round\": props.round,\n          \"position\": props.position,\n          \"closeable\": props.showTitle || props.showSubtitle,\n          \"teleport\": props.teleport,\n          \"closeOnPopstate\": props.closeOnPopstate,\n          \"safeAreaInsetTop\": props.safeAreaInsetTop,\n          \"closeOnClickOverlay\": props.closeOnClickOverlay,\n          \"onUpdate:show\": updateShow\n        }, {\n          default: renderCalendar\n        });\n      }\n      return renderCalendar();\n    };\n  }\n});\nexport {\n  stdin_default as default\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}