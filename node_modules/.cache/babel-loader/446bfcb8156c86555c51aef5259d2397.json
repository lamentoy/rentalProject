{"ast":null,"code":"import { createVNode as _createVNode, mergeProps as _mergeProps } from \"vue\";\nimport { extend, inBrowser, withInstall } from \"../utils\";\nimport { mountComponent, usePopupState } from \"../utils/mount-component\";\nimport VanImagePreview from \"./ImagePreview\";\nvar instance;\nvar defaultConfig = {\n  loop: true,\n  images: [],\n  maxZoom: 3,\n  minZoom: 1 / 3,\n  onScale: void 0,\n  onClose: void 0,\n  onChange: void 0,\n  teleport: \"body\",\n  className: \"\",\n  showIndex: true,\n  closeable: false,\n  closeIcon: \"clear\",\n  transition: void 0,\n  beforeClose: void 0,\n  overlayStyle: void 0,\n  overlayClass: void 0,\n  startPosition: 0,\n  swipeDuration: 300,\n  showIndicators: false,\n  closeOnPopstate: true,\n  closeIconPosition: \"top-right\"\n};\n\nfunction initInstance() {\n  var _mountComponent = mountComponent({\n    setup: function setup() {\n      var _usePopupState = usePopupState(),\n          state = _usePopupState.state,\n          toggle = _usePopupState.toggle;\n\n      var onClosed = function onClosed() {\n        state.images = [];\n      };\n\n      return function () {\n        return _createVNode(VanImagePreview, _mergeProps(state, {\n          \"onClosed\": onClosed,\n          \"onUpdate:show\": toggle\n        }), null);\n      };\n    }\n  });\n\n  instance = _mountComponent.instance;\n}\n\nvar ImagePreview = function ImagePreview(options) {\n  var startPosition = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n  if (!inBrowser) {\n    return;\n  }\n\n  if (!instance) {\n    initInstance();\n  }\n\n  options = Array.isArray(options) ? {\n    images: options,\n    startPosition: startPosition\n  } : options;\n  instance.open(extend({}, defaultConfig, options));\n  return instance;\n};\n\nImagePreview.Component = withInstall(VanImagePreview);\n\nImagePreview.install = function (app) {\n  app.use(ImagePreview.Component);\n};\n\nexport { ImagePreview };","map":{"version":3,"names":["createVNode","_createVNode","mergeProps","_mergeProps","extend","inBrowser","withInstall","mountComponent","usePopupState","VanImagePreview","instance","defaultConfig","loop","images","maxZoom","minZoom","onScale","onClose","onChange","teleport","className","showIndex","closeable","closeIcon","transition","beforeClose","overlayStyle","overlayClass","startPosition","swipeDuration","showIndicators","closeOnPopstate","closeIconPosition","initInstance","setup","state","toggle","onClosed","ImagePreview","options","Array","isArray","open","Component","install","app","use"],"sources":["/Users/lamentoyy/Desktop/rental_project/node_modules/vant/es/image-preview/function-call.js"],"sourcesContent":["import { createVNode as _createVNode, mergeProps as _mergeProps } from \"vue\";\nimport { extend, inBrowser, withInstall } from \"../utils\";\nimport { mountComponent, usePopupState } from \"../utils/mount-component\";\nimport VanImagePreview from \"./ImagePreview\";\nlet instance;\nconst defaultConfig = {\n  loop: true,\n  images: [],\n  maxZoom: 3,\n  minZoom: 1 / 3,\n  onScale: void 0,\n  onClose: void 0,\n  onChange: void 0,\n  teleport: \"body\",\n  className: \"\",\n  showIndex: true,\n  closeable: false,\n  closeIcon: \"clear\",\n  transition: void 0,\n  beforeClose: void 0,\n  overlayStyle: void 0,\n  overlayClass: void 0,\n  startPosition: 0,\n  swipeDuration: 300,\n  showIndicators: false,\n  closeOnPopstate: true,\n  closeIconPosition: \"top-right\"\n};\nfunction initInstance() {\n  ({\n    instance\n  } = mountComponent({\n    setup() {\n      const {\n        state,\n        toggle\n      } = usePopupState();\n      const onClosed = () => {\n        state.images = [];\n      };\n      return () => _createVNode(VanImagePreview, _mergeProps(state, {\n        \"onClosed\": onClosed,\n        \"onUpdate:show\": toggle\n      }), null);\n    }\n  }));\n}\nconst ImagePreview = (options, startPosition = 0) => {\n  if (!inBrowser) {\n    return;\n  }\n  if (!instance) {\n    initInstance();\n  }\n  options = Array.isArray(options) ? {\n    images: options,\n    startPosition\n  } : options;\n  instance.open(extend({}, defaultConfig, options));\n  return instance;\n};\nImagePreview.Component = withInstall(VanImagePreview);\nImagePreview.install = (app) => {\n  app.use(ImagePreview.Component);\n};\nexport {\n  ImagePreview\n};\n"],"mappings":"AAAA,SAASA,WAAW,IAAIC,YAAxB,EAAsCC,UAAU,IAAIC,WAApD,QAAuE,KAAvE;AACA,SAASC,MAAT,EAAiBC,SAAjB,EAA4BC,WAA5B,QAA+C,UAA/C;AACA,SAASC,cAAT,EAAyBC,aAAzB,QAA8C,0BAA9C;AACA,OAAOC,eAAP,MAA4B,gBAA5B;AACA,IAAIC,QAAJ;AACA,IAAMC,aAAa,GAAG;EACpBC,IAAI,EAAE,IADc;EAEpBC,MAAM,EAAE,EAFY;EAGpBC,OAAO,EAAE,CAHW;EAIpBC,OAAO,EAAE,IAAI,CAJO;EAKpBC,OAAO,EAAE,KAAK,CALM;EAMpBC,OAAO,EAAE,KAAK,CANM;EAOpBC,QAAQ,EAAE,KAAK,CAPK;EAQpBC,QAAQ,EAAE,MARU;EASpBC,SAAS,EAAE,EATS;EAUpBC,SAAS,EAAE,IAVS;EAWpBC,SAAS,EAAE,KAXS;EAYpBC,SAAS,EAAE,OAZS;EAapBC,UAAU,EAAE,KAAK,CAbG;EAcpBC,WAAW,EAAE,KAAK,CAdE;EAepBC,YAAY,EAAE,KAAK,CAfC;EAgBpBC,YAAY,EAAE,KAAK,CAhBC;EAiBpBC,aAAa,EAAE,CAjBK;EAkBpBC,aAAa,EAAE,GAlBK;EAmBpBC,cAAc,EAAE,KAnBI;EAoBpBC,eAAe,EAAE,IApBG;EAqBpBC,iBAAiB,EAAE;AArBC,CAAtB;;AAuBA,SAASC,YAAT,GAAwB;EAAA,sBAGlB1B,cAAc,CAAC;IACjB2B,KADiB,mBACT;MACN,qBAGI1B,aAAa,EAHjB;MAAA,IACE2B,KADF,kBACEA,KADF;MAAA,IAEEC,MAFF,kBAEEA,MAFF;;MAIA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;QACrBF,KAAK,CAACtB,MAAN,GAAe,EAAf;MACD,CAFD;;MAGA,OAAO;QAAA,OAAMZ,YAAY,CAACQ,eAAD,EAAkBN,WAAW,CAACgC,KAAD,EAAQ;UAC5D,YAAYE,QADgD;UAE5D,iBAAiBD;QAF2C,CAAR,CAA7B,EAGrB,IAHqB,CAAlB;MAAA,CAAP;IAID;EAbgB,CAAD,CAHI;;EAEpB1B,QAFoB,mBAEpBA,QAFoB;AAkBvB;;AACD,IAAM4B,YAAY,GAAG,SAAfA,YAAe,CAACC,OAAD,EAAgC;EAAA,IAAtBX,aAAsB,uEAAN,CAAM;;EACnD,IAAI,CAACvB,SAAL,EAAgB;IACd;EACD;;EACD,IAAI,CAACK,QAAL,EAAe;IACbuB,YAAY;EACb;;EACDM,OAAO,GAAGC,KAAK,CAACC,OAAN,CAAcF,OAAd,IAAyB;IACjC1B,MAAM,EAAE0B,OADyB;IAEjCX,aAAa,EAAbA;EAFiC,CAAzB,GAGNW,OAHJ;EAIA7B,QAAQ,CAACgC,IAAT,CAActC,MAAM,CAAC,EAAD,EAAKO,aAAL,EAAoB4B,OAApB,CAApB;EACA,OAAO7B,QAAP;AACD,CAbD;;AAcA4B,YAAY,CAACK,SAAb,GAAyBrC,WAAW,CAACG,eAAD,CAApC;;AACA6B,YAAY,CAACM,OAAb,GAAuB,UAACC,GAAD,EAAS;EAC9BA,GAAG,CAACC,GAAJ,CAAQR,YAAY,CAACK,SAArB;AACD,CAFD;;AAGA,SACEL,YADF"},"metadata":{},"sourceType":"module"}