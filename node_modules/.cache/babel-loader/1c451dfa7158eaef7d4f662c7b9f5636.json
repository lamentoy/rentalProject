{"ast":null,"code":"import _slicedToArray from \"/Users/lamentoyy/Desktop/rental_project/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport { createVNode as _createVNode } from \"vue\";\nimport { watch, defineComponent } from \"vue\";\nimport { numericProp, createNamespace, makeArrayProp } from \"../utils\";\nimport { useChildren, useCustomFieldValue } from \"@vant/use\";\nimport { useExpose } from \"../composables/use-expose\";\n\nvar _createNamespace = createNamespace(\"checkbox-group\"),\n    _createNamespace2 = _slicedToArray(_createNamespace, 2),\n    name = _createNamespace2[0],\n    bem = _createNamespace2[1];\n\nvar checkboxGroupProps = {\n  max: numericProp,\n  disabled: Boolean,\n  iconSize: numericProp,\n  direction: String,\n  modelValue: makeArrayProp(),\n  checkedColor: String\n};\nvar CHECKBOX_GROUP_KEY = Symbol(name);\nvar stdin_default = defineComponent({\n  name: name,\n  props: checkboxGroupProps,\n  emits: [\"change\", \"update:modelValue\"],\n  setup: function setup(props, _ref) {\n    var emit = _ref.emit,\n        slots = _ref.slots;\n\n    var _useChildren = useChildren(CHECKBOX_GROUP_KEY),\n        children = _useChildren.children,\n        linkChildren = _useChildren.linkChildren;\n\n    var updateValue = function updateValue(value) {\n      return emit(\"update:modelValue\", value);\n    };\n\n    var toggleAll = function toggleAll() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      if (typeof options === \"boolean\") {\n        options = {\n          checked: options\n        };\n      }\n\n      var _options = options,\n          checked = _options.checked,\n          skipDisabled = _options.skipDisabled;\n      var checkedChildren = children.filter(function (item) {\n        if (!item.props.bindGroup) {\n          return false;\n        }\n\n        if (item.props.disabled && skipDisabled) {\n          return item.checked.value;\n        }\n\n        return checked != null ? checked : !item.checked.value;\n      });\n      var names = checkedChildren.map(function (item) {\n        return item.name;\n      });\n      updateValue(names);\n    };\n\n    watch(function () {\n      return props.modelValue;\n    }, function (value) {\n      return emit(\"change\", value);\n    });\n    useExpose({\n      toggleAll: toggleAll\n    });\n    useCustomFieldValue(function () {\n      return props.modelValue;\n    });\n    linkChildren({\n      props: props,\n      updateValue: updateValue\n    });\n    return function () {\n      var _a;\n\n      return _createVNode(\"div\", {\n        \"class\": bem([props.direction])\n      }, [(_a = slots.default) == null ? void 0 : _a.call(slots)]);\n    };\n  }\n});\nexport { CHECKBOX_GROUP_KEY, stdin_default as default };","map":{"version":3,"names":["createVNode","_createVNode","watch","defineComponent","numericProp","createNamespace","makeArrayProp","useChildren","useCustomFieldValue","useExpose","name","bem","checkboxGroupProps","max","disabled","Boolean","iconSize","direction","String","modelValue","checkedColor","CHECKBOX_GROUP_KEY","Symbol","stdin_default","props","emits","setup","emit","slots","children","linkChildren","updateValue","value","toggleAll","options","checked","skipDisabled","checkedChildren","filter","item","bindGroup","names","map","_a","default","call"],"sources":["/Users/lamentoyy/Desktop/rental_project/node_modules/vant/es/checkbox-group/CheckboxGroup.js"],"sourcesContent":["import { createVNode as _createVNode } from \"vue\";\nimport { watch, defineComponent } from \"vue\";\nimport { numericProp, createNamespace, makeArrayProp } from \"../utils\";\nimport { useChildren, useCustomFieldValue } from \"@vant/use\";\nimport { useExpose } from \"../composables/use-expose\";\nconst [name, bem] = createNamespace(\"checkbox-group\");\nconst checkboxGroupProps = {\n  max: numericProp,\n  disabled: Boolean,\n  iconSize: numericProp,\n  direction: String,\n  modelValue: makeArrayProp(),\n  checkedColor: String\n};\nconst CHECKBOX_GROUP_KEY = Symbol(name);\nvar stdin_default = defineComponent({\n  name,\n  props: checkboxGroupProps,\n  emits: [\"change\", \"update:modelValue\"],\n  setup(props, {\n    emit,\n    slots\n  }) {\n    const {\n      children,\n      linkChildren\n    } = useChildren(CHECKBOX_GROUP_KEY);\n    const updateValue = (value) => emit(\"update:modelValue\", value);\n    const toggleAll = (options = {}) => {\n      if (typeof options === \"boolean\") {\n        options = {\n          checked: options\n        };\n      }\n      const {\n        checked,\n        skipDisabled\n      } = options;\n      const checkedChildren = children.filter((item) => {\n        if (!item.props.bindGroup) {\n          return false;\n        }\n        if (item.props.disabled && skipDisabled) {\n          return item.checked.value;\n        }\n        return checked != null ? checked : !item.checked.value;\n      });\n      const names = checkedChildren.map((item) => item.name);\n      updateValue(names);\n    };\n    watch(() => props.modelValue, (value) => emit(\"change\", value));\n    useExpose({\n      toggleAll\n    });\n    useCustomFieldValue(() => props.modelValue);\n    linkChildren({\n      props,\n      updateValue\n    });\n    return () => {\n      var _a;\n      return _createVNode(\"div\", {\n        \"class\": bem([props.direction])\n      }, [(_a = slots.default) == null ? void 0 : _a.call(slots)]);\n    };\n  }\n});\nexport {\n  CHECKBOX_GROUP_KEY,\n  stdin_default as default\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}